package parser.tagBuilder;

import org.json.JSONObject;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import parser.Tag;

/**
 * Created by Josu√© on 11/05/2017.
 */
public class TagExploit extends TagBuilder {

    public TagExploit(JSONObject request, JSONObject answer, int id) {
        super(request, answer, Tag.EXPLOIT.getName(), id);
    }

    @Override
    public Element getAnswerXml(Document doc){
        Element element = super.getAnswerXml(doc);

        NodeList list = element.getElementsByTagName(Constant.data);
        Element data =(Element) list.item(0);

        NodeList extraList = data.getElementsByTagName(Constant.extras);
        Element extra =(Element) extraList.item(0);

        JSONObject extrasJson = answer.getJSONObject(Constant.data).getJSONObject(Constant.extras);

        Element amount = doc.createElement(Constant.amount);
        amount.appendChild(doc.createTextNode(String.valueOf(extrasJson.getInt(Constant.amount))));

        extra.appendChild(amount);
        return element;
    }
}
